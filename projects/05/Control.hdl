/*

This file is part of www.nand2tetris.org and the book "The Elements of
Computing Systems" by Nisan and Schocken, MIT Press.
File name: projects/05/Control.hdl

This chip decodes computer instructions.

p.94

Inputs:
  * the instruction to be decoded
  * something from the ALU? (jump?)

Outputs:
  * isAddress: true if this is an A instruction
  * isCompute: true if this is an C instruction
  * something to select between A and M as input to the ALU?
  * address to the A register?
  * address to the D register?
  * the compute commands to the ALU
  * something in to the PC? Increment? Load?
  * writeM

Notes:
  * it looks like this is purely combinatoric
  * need to break up C instructions into a, c1-c6 (comp), d1-d3 (dest), j1-j3 (jmp).
  * inputs to ALU are x, zx, nx, y, zy, ny, f, no
  * outputs from ALU are out, zr (out==0), ng (out<0)


*/

CHIP Control {
    IN inst[16], alu[16];
    OUT iBit, vBus[15], aBit, cBus[6], dBus[3], jBus[3];

    PARTS:
    And16(a=inst, b[0..15]=true, out[15]=iBit, out[0..14]=vBus,
          out[12]=aBit, out[6..11]=cBus, out[3..5]=dBus,
          out[0..2]=jBus);

    /* add Mux so there's only one output */
    // Mux4Way16(a=ramOut, b=ramOut, c=screenOut, d=kbdOut, sel=address[13..14], out=out);
}
